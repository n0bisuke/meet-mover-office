name: 30分ごと

# on:
#   schedule:
#   - cron:  '30 8,12,15 * * *'

on:
  schedule:
  - cron:  '0,30 * * * *'

# on:
#   push:
#     branches: [ main ]
    # プッシュ時に動作する

jobs:
  build:

    # このジョブのために ubuntu サーバーを準備
    # まっさらなサーバーなので、以下で Node.js 自体の準備や npm install を行う
    runs-on: ubuntu-latest
    timeout-minutes: 30

    strategy:
      matrix:
        node-version: [18.x]

    # 以下が実際のステップ
    steps:

    # この例では、v2 を使用することにより、チェックアウトアクションの安定版を確実に使用するようにしています
    - uses: actions/checkout@v2
    # Node.js 17.x のセットアップ
    - name: Use Node.js 18.x
      uses: actions/setup-node@v1
      with:
        node-version: '18.x'
    
    # キャッシュ
    - name: Cache dependencies
      uses: actions/cache@v2
      with:
        path: ~/.npm
        key: npm-${{ hashFiles('package-lock.json') }}
        restore-keys: npm-

    # インストール
    - name: yarn install command
      run: yarn install
    
    # 実際のコマンド
    - name: start action...
      run: > 
        G_TOKEN_OFFICE=${{secrets.G_TOKEN_OFFICE}}
        G_CREDENTIALS_GDRIVE_MOVER=${{secrets.G_CREDENTIALS_GDRIVE_MOVER}}
        ORIGIN_FOLDER_ID=${{secrets.ORIGIN_FOLDER_ID}}
        DESTINATION_DRIVE_ID=${{secrets.DESTINATION_DRIVE_ID}}
        DESTINATION_FOLDER_ID=${{secrets.DESTINATION_FOLDER_ID}}
        MEET_SHEET_ID=${{secrets.MEET_SHEET_ID}}
        G_SHEET_NB_CREDENTIALS=${{secrets.G_SHEET_NB_CREDENTIALS}}
        G_SHEET_NB_TOKEN=${{secrets.G_SHEET_NB_TOKEN}}
        YOUTUBE_DS_CREDENTIALS=${{secrets.YOUTUBE_DS_CREDENTIALS}}
        YOUTUBE_POS_BACKUP_TOKEN=${{secrets.YOUTUBE_POS_BACKUP_TOKEN}}
        YOUTUBE_POS_BACKUP_TOKEN_SUB=${{secrets.YOUTUBE_POS_BACKUP_TOKEN_SUB}}
        YOUTUBE_POS_TOKEN=${{secrets.YOUTUBE_POS_TOKEN}}
        node app.js
